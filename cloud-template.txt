**************************************************
*** Newer version of CDK is available [1.30.0] ***
*** Upgrade recommended                        ***
**************************************************
Resources:
  customers4F944D62:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: custId
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: custId
          AttributeType: S
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TableName: customers
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: CustomerRESTServerlessService/customers/Resource
  getSingleCustInfoServiceRole56BB174A:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CustomerRESTServerlessService/getSingleCustInfo/ServiceRole/Resource
  getSingleCustInfoServiceRoleDefaultPolicy79106930:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - customers4F944D62
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: getSingleCustInfoServiceRoleDefaultPolicy79106930
      Roles:
        - Ref: getSingleCustInfoServiceRole56BB174A
    Metadata:
      aws:cdk:path: CustomerRESTServerlessService/getSingleCustInfo/ServiceRole/DefaultPolicy/Resource
  getSingleCustInfoFEFA612F:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersc1563523d78ac4c5c499074187c62ad4563fa5f3b8bb68a209c87c3e9f29b80cS3Bucket7497A3A3
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersc1563523d78ac4c5c499074187c62ad4563fa5f3b8bb68a209c87c3e9f29b80cS3VersionKeyFA962BF3
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersc1563523d78ac4c5c499074187c62ad4563fa5f3b8bb68a209c87c3e9f29b80cS3VersionKeyFA962BF3
      Handler: get_one_cust_info.handler
      Role:
        Fn::GetAtt:
          - getSingleCustInfoServiceRole56BB174A
          - Arn
      Runtime: nodejs10.x
      Environment:
        Variables:
          TABLE_NAME:
            Ref: customers4F944D62
          PRIMARY_KEY: custId
    DependsOn:
      - getSingleCustInfoServiceRoleDefaultPolicy79106930
      - getSingleCustInfoServiceRole56BB174A
    Metadata:
      aws:cdk:path: CustomerRESTServerlessService/getSingleCustInfo/Resource
      aws:asset:path: asset.c1563523d78ac4c5c499074187c62ad4563fa5f3b8bb68a209c87c3e9f29b80c
      aws:asset:property: Code
  getAllCustInfoServiceRole6659D05C:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CustomerRESTServerlessService/getAllCustInfo/ServiceRole/Resource
  getAllCustInfoServiceRoleDefaultPolicy965598E4:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - customers4F944D62
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: getAllCustInfoServiceRoleDefaultPolicy965598E4
      Roles:
        - Ref: getAllCustInfoServiceRole6659D05C
    Metadata:
      aws:cdk:path: CustomerRESTServerlessService/getAllCustInfo/ServiceRole/DefaultPolicy/Resource
  getAllCustInfoFA59A866:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersc1563523d78ac4c5c499074187c62ad4563fa5f3b8bb68a209c87c3e9f29b80cS3Bucket7497A3A3
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersc1563523d78ac4c5c499074187c62ad4563fa5f3b8bb68a209c87c3e9f29b80cS3VersionKeyFA962BF3
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersc1563523d78ac4c5c499074187c62ad4563fa5f3b8bb68a209c87c3e9f29b80cS3VersionKeyFA962BF3
      Handler: get_all_cust_info.handler
      Role:
        Fn::GetAtt:
          - getAllCustInfoServiceRole6659D05C
          - Arn
      Runtime: nodejs10.x
      Environment:
        Variables:
          TABLE_NAME:
            Ref: customers4F944D62
          PRIMARY_KEY: custId
    DependsOn:
      - getAllCustInfoServiceRoleDefaultPolicy965598E4
      - getAllCustInfoServiceRole6659D05C
    Metadata:
      aws:cdk:path: CustomerRESTServerlessService/getAllCustInfo/Resource
      aws:asset:path: asset.c1563523d78ac4c5c499074187c62ad4563fa5f3b8bb68a209c87c3e9f29b80c
      aws:asset:property: Code
  createCustInfoServiceRoleF78F89BF:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CustomerRESTServerlessService/createCustInfo/ServiceRole/Resource
  createCustInfoServiceRoleDefaultPolicyCCA528D6:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - customers4F944D62
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: createCustInfoServiceRoleDefaultPolicyCCA528D6
      Roles:
        - Ref: createCustInfoServiceRoleF78F89BF
    Metadata:
      aws:cdk:path: CustomerRESTServerlessService/createCustInfo/ServiceRole/DefaultPolicy/Resource
  createCustInfo88C9F97F:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersc1563523d78ac4c5c499074187c62ad4563fa5f3b8bb68a209c87c3e9f29b80cS3Bucket7497A3A3
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersc1563523d78ac4c5c499074187c62ad4563fa5f3b8bb68a209c87c3e9f29b80cS3VersionKeyFA962BF3
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersc1563523d78ac4c5c499074187c62ad4563fa5f3b8bb68a209c87c3e9f29b80cS3VersionKeyFA962BF3
      Handler: save_cust_info.handler
      Role:
        Fn::GetAtt:
          - createCustInfoServiceRoleF78F89BF
          - Arn
      Runtime: nodejs10.x
      Environment:
        Variables:
          TABLE_NAME:
            Ref: customers4F944D62
          PRIMARY_KEY: custId
    DependsOn:
      - createCustInfoServiceRoleDefaultPolicyCCA528D6
      - createCustInfoServiceRoleF78F89BF
    Metadata:
      aws:cdk:path: CustomerRESTServerlessService/createCustInfo/Resource
      aws:asset:path: asset.c1563523d78ac4c5c499074187c62ad4563fa5f3b8bb68a209c87c3e9f29b80c
      aws:asset:property: Code
  customerApiFDFBA057:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: Customer Service
    Metadata:
      aws:cdk:path: CustomerRESTServerlessService/customerApi/Resource
  customerApiDeploymentB4D2ACFC3d55bf28b53630024d55aec03938fa64:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: customerApiFDFBA057
      Description: Automatically created by the RestApi construct
    DependsOn:
      - customerApicustomersidGETC9C8411A
      - customerApicustomersidB657C180
      - customerApicustomersGETCE98E7EE
      - customerApicustomersOPTIONSE52B4B54
      - customerApicustomersPOSTC9EEC41A
      - customerApicustomersB1BC517E
    Metadata:
      aws:cdk:path: CustomerRESTServerlessService/customerApi/Deployment/Resource
  customerApiDeploymentStageprod294703ED:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: customerApiFDFBA057
      DeploymentId:
        Ref: customerApiDeploymentB4D2ACFC3d55bf28b53630024d55aec03938fa64
      StageName: prod
    Metadata:
      aws:cdk:path: CustomerRESTServerlessService/customerApi/DeploymentStage.prod/Resource
  customerApiCloudWatchRole72CAFC0D:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: CustomerRESTServerlessService/customerApi/CloudWatchRole/Resource
  customerApiAccount1BEC01A7:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - customerApiCloudWatchRole72CAFC0D
          - Arn
    DependsOn:
      - customerApiFDFBA057
    Metadata:
      aws:cdk:path: CustomerRESTServerlessService/customerApi/Account
  customerApicustomersB1BC517E:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - customerApiFDFBA057
          - RootResourceId
      PathPart: customers
      RestApiId:
        Ref: customerApiFDFBA057
    Metadata:
      aws:cdk:path: CustomerRESTServerlessService/customerApi/Default/customers/Resource
  customerApicustomersGETApiPermissionCustomerRESTServerlessServicecustomerApi7757E180GETcustomers4C3448BF:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - getAllCustInfoFA59A866
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: customerApiFDFBA057
            - /
            - Ref: customerApiDeploymentStageprod294703ED
            - /GET/customers
    Metadata:
      aws:cdk:path: CustomerRESTServerlessService/customerApi/Default/customers/GET/ApiPermission.CustomerRESTServerlessServicecustomerApi7757E180.GET..customers
  customerApicustomersGETApiPermissionTestCustomerRESTServerlessServicecustomerApi7757E180GETcustomersDA668CA1:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - getAllCustInfoFA59A866
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: customerApiFDFBA057
            - /test-invoke-stage/GET/customers
    Metadata:
      aws:cdk:path: CustomerRESTServerlessService/customerApi/Default/customers/GET/ApiPermission.Test.CustomerRESTServerlessServicecustomerApi7757E180.GET..customers
  customerApicustomersGETCE98E7EE:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: customerApicustomersB1BC517E
      RestApiId:
        Ref: customerApiFDFBA057
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - getAllCustInfoFA59A866
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: CustomerRESTServerlessService/customerApi/Default/customers/GET/Resource
  customerApicustomersPOSTApiPermissionCustomerRESTServerlessServicecustomerApi7757E180POSTcustomersFF20C16B:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - createCustInfo88C9F97F
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: customerApiFDFBA057
            - /
            - Ref: customerApiDeploymentStageprod294703ED
            - /POST/customers
    Metadata:
      aws:cdk:path: CustomerRESTServerlessService/customerApi/Default/customers/POST/ApiPermission.CustomerRESTServerlessServicecustomerApi7757E180.POST..customers
  customerApicustomersPOSTApiPermissionTestCustomerRESTServerlessServicecustomerApi7757E180POSTcustomersA6565040:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - createCustInfo88C9F97F
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: customerApiFDFBA057
            - /test-invoke-stage/POST/customers
    Metadata:
      aws:cdk:path: CustomerRESTServerlessService/customerApi/Default/customers/POST/ApiPermission.Test.CustomerRESTServerlessServicecustomerApi7757E180.POST..customers
  customerApicustomersPOSTC9EEC41A:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: customerApicustomersB1BC517E
      RestApiId:
        Ref: customerApiFDFBA057
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - createCustInfo88C9F97F
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: CustomerRESTServerlessService/customerApi/Default/customers/POST/Resource
  customerApicustomersOPTIONSE52B4B54:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: customerApicustomersB1BC517E
      RestApiId:
        Ref: customerApiFDFBA057
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Credentials: "'false'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE'"
            StatusCode: "200"
        PassthroughBehavior: NEVER
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Credentials: true
            method.response.header.Access-Control-Allow-Origin: true
          StatusCode: "200"
    Metadata:
      aws:cdk:path: CustomerRESTServerlessService/customerApi/Default/customers/OPTIONS/Resource
  customerApicustomersidB657C180:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: customerApicustomersB1BC517E
      PathPart: "{id}"
      RestApiId:
        Ref: customerApiFDFBA057
    Metadata:
      aws:cdk:path: CustomerRESTServerlessService/customerApi/Default/customers/{id}/Resource
  customerApicustomersidGETApiPermissionCustomerRESTServerlessServicecustomerApi7757E180GETcustomersid47B6D58B:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - getSingleCustInfoFEFA612F
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: customerApiFDFBA057
            - /
            - Ref: customerApiDeploymentStageprod294703ED
            - /GET/customers/{id}
    Metadata:
      aws:cdk:path: CustomerRESTServerlessService/customerApi/Default/customers/{id}/GET/ApiPermission.CustomerRESTServerlessServicecustomerApi7757E180.GET..customers.{id}
  customerApicustomersidGETApiPermissionTestCustomerRESTServerlessServicecustomerApi7757E180GETcustomersid083F54FD:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - getSingleCustInfoFEFA612F
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: customerApiFDFBA057
            - /test-invoke-stage/GET/customers/{id}
    Metadata:
      aws:cdk:path: CustomerRESTServerlessService/customerApi/Default/customers/{id}/GET/ApiPermission.Test.CustomerRESTServerlessServicecustomerApi7757E180.GET..customers.{id}
  customerApicustomersidGETC9C8411A:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: customerApicustomersidB657C180
      RestApiId:
        Ref: customerApiFDFBA057
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - getSingleCustInfoFEFA612F
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: CustomerRESTServerlessService/customerApi/Default/customers/{id}/GET/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=1.25.0,@aws-cdk/assets=1.30.0,@aws-cdk/aws-apigateway=1.30.0,@aws-cdk/aws-applicationautoscaling=1.30.0,@aws-cdk/aws-autoscaling=1.30.0,@aws-cdk/aws-autoscaling-common=1.30.0,@aws-cdk/aws-autoscaling-hooktargets=1.30.0,@aws-cdk/aws-cloudformation=1.30.0,@aws-cdk/aws-cloudwatch=1.30.0,@aws-cdk/aws-dynamodb=1.30.0,@aws-cdk/aws-ec2=1.30.0,@aws-cdk/aws-ecr=1.30.0,@aws-cdk/aws-ecr-assets=1.30.0,@aws-cdk/aws-ecs=1.30.0,@aws-cdk/aws-elasticloadbalancingv2=1.30.0,@aws-cdk/aws-events=1.30.0,@aws-cdk/aws-iam=1.30.0,@aws-cdk/aws-kms=1.30.0,@aws-cdk/aws-lambda=1.30.0,@aws-cdk/aws-logs=1.30.0,@aws-cdk/aws-s3=1.30.0,@aws-cdk/aws-s3-assets=1.30.0,@aws-cdk/aws-servicediscovery=1.30.0,@aws-cdk/aws-sns=1.30.0,@aws-cdk/aws-sns-subscriptions=1.30.0,@aws-cdk/aws-sqs=1.30.0,@aws-cdk/aws-ssm=1.30.0,@aws-cdk/aws-stepfunctions=1.30.0,@aws-cdk/aws-stepfunctions-tasks=1.30.0,@aws-cdk/core=1.30.0,@aws-cdk/custom-resources=1.30.0,@aws-cdk/cx-api=1.30.0,@aws-cdk/region-info=1.30.0,jsii-runtime=node.js/v10.16.2
    Condition: CDKMetadataAvailable
Parameters:
  AssetParametersc1563523d78ac4c5c499074187c62ad4563fa5f3b8bb68a209c87c3e9f29b80cS3Bucket7497A3A3:
    Type: String
    Description: S3 bucket for asset "c1563523d78ac4c5c499074187c62ad4563fa5f3b8bb68a209c87c3e9f29b80c"
  AssetParametersc1563523d78ac4c5c499074187c62ad4563fa5f3b8bb68a209c87c3e9f29b80cS3VersionKeyFA962BF3:
    Type: String
    Description: S3 key for asset version "c1563523d78ac4c5c499074187c62ad4563fa5f3b8bb68a209c87c3e9f29b80c"
  AssetParametersc1563523d78ac4c5c499074187c62ad4563fa5f3b8bb68a209c87c3e9f29b80cArtifactHash0DC3F3BE:
    Type: String
    Description: Artifact hash for asset "c1563523d78ac4c5c499074187c62ad4563fa5f3b8bb68a209c87c3e9f29b80c"
Outputs:
  customerApiEndpointAA2FEAF9:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: customerApiFDFBA057
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: customerApiDeploymentStageprod294703ED
          - /
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
